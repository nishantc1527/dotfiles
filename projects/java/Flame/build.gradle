buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "gradle.plugin.com.dorongold.plugins:task-tree:1.5"
    classpath "com.diffplug.spotless:spotless-plugin-gradle:5.2.0"
    classpath "com.github.jengelman.gradle.plugins:shadow:6.0.0"
  }
}

allprojects {
  apply plugin: 'java'

  sourceCompatibility = '1.8' // Require Java 8
  targetCompatibility = '1.8'
}

subprojects {
  apply plugin: 'java'
  apply plugin: 'com.diffplug.spotless'
  apply plugin: 'com.dorongold.task-tree'
  apply plugin: 'com.github.johnrengelman.shadow'

  repositories {
    mavenCentral()
  }

  spotless {
    java {
      importOrder()
      removeUnusedImports()
      googleJavaFormat()
    }
  }

  dependencies {
    testImplementation 'junit:junit:4.13' // Use JUnit For Unit Testing
  }

  build {
    dependsOn(tasks.shadowJar)
  }
}

def exportedProjects = [
  ":compiler",
  ":compiler:compilertools",
  ":compiler:parser",
  ":compiler:parser:lexer"
]

task alljavadoc(type: Javadoc) {
  source exportedProjects.collect { project(it).sourceSets.main.allJava }
  classpath = files(exportedProjects.collect { project(it).sourceSets.main.compileClasspath })
  destinationDir = file("${buildDir}/docs/javadoc")
}

configure(alljavadoc) {
  group = 'documentation'
}

task deleteBin(type: Delete) { // Delete The Bin Folder When The Clean Task Is Run
  doLast {
    file('bin').deleteDir()
  }
}

clean {
  dependsOn(deleteBin)
}

build {
  dependsOn(alljavadoc)
}
